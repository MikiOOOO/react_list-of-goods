{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","NONE","Error","reverse","App","state","reverseGoods","setState","sortGoodsAlphabetically","sortGoodsByLength","resetGoodsOrder","this","isMutated","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,MAAK,SAACC,EAAWC,GAC5B,OAAOD,EAAUE,cAAcD,MAEjC,MAGF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAWC,GAC5B,OAAOD,EAAUI,OAASH,EAAWG,UAEvC,MAGF,KAAKb,EAASc,KACZ,MAGF,QACE,MAAM,IAAIC,MAAM,wBAIpB,OAAOV,EAAaC,EAAaU,UAAYV,G,SAzC1CN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA4CE,IAAMiB,EAAb,4MACEC,MAAyB,CACvBb,YAAY,EACZD,SAAUJ,EAASc,MAHvB,EAMEK,aAAe,WACb,EAAKC,UAAS,SAAAF,GAAK,MAAK,CAAEb,YAAaa,EAAMb,gBAPjD,EAUEgB,wBAA0B,WACxB,EAAKD,SAAS,CAAEhB,SAAUJ,EAASO,YAXvC,EAcEe,kBAAoB,WAClB,EAAKF,SAAS,CAAEhB,SAAUJ,EAASY,UAfvC,EAkBEW,gBAAkB,WAChB,EAAKH,SAAS,CAAEf,YAAY,IAC5B,EAAKe,SAAS,CAAEhB,SAAUJ,EAASc,QApBvC,4CAuBE,WACE,MAAiCU,KAAKN,MAA9Bd,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAEZoB,EAAYD,KAAKN,MAAMb,YACxBmB,KAAKN,MAAMd,WAAaJ,EAASc,KAEtC,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBtB,IAAaJ,EAASO,UAAY,YAC/DqB,QAASJ,KAAKH,wBAHhB,iCAQA,wBACEM,KAAK,SACLD,UAAS,4BAAuBtB,IAAaJ,EAASY,QAAU,YAChEgB,QAASJ,KAAKF,kBAHhB,4BAQA,wBACEK,KAAK,SACLD,UAAS,6BAAwBrB,GAAc,YAC/CuB,QAASJ,KAAKL,aAHhB,qBASEM,GAEI,wBACEE,KAAK,SACLD,UAAU,4BACVE,QAASJ,KAAKD,gBAHhB,sBAWR,6BACE,6BACIrB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC9CwB,KAAI,SAAAC,GAAI,OACP,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,iBA1ExC,GAAyBC,IAAMC,WC1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.efe05586.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 0,\n  ALPHABET = 1,\n  LENGTH = 2,\n}\n\ninterface State {\n  sortType: SortType,\n  isReversed: boolean | null,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: State,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET: {\n      visibleGoods.sort((firstGood, secondGood) => {\n        return firstGood.localeCompare(secondGood);\n      });\n      break;\n    }\n\n    case SortType.LENGTH: {\n      visibleGoods.sort((firstGood, secondGood) => {\n        return firstGood.length - secondGood.length;\n      });\n      break;\n    }\n\n    case SortType.NONE: {\n      break;\n    }\n\n    default: {\n      throw new Error('invalid sortType key');\n    }\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverseGoods = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  sortGoodsAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  sortGoodsByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  resetGoodsOrder = () => {\n    this.setState({ isReversed: false });\n    this.setState({ sortType: SortType.NONE });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    const isMutated = this.state.isReversed\n      || this.state.sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType !== SortType.ALPHABET && 'is-light'}`}\n            onClick={this.sortGoodsAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n            onClick={this.sortGoodsByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!isReversed && 'is-light'}`}\n            onClick={this.reverseGoods}\n          >\n            Reverse\n          </button>\n\n          {\n            isMutated\n              && (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={this.resetGoodsOrder}\n                >\n                  Reset\n                </button>\n              )\n          }\n        </div>\n\n        <ul>\n          <ul>\n            { getReorderedGoods(goodsFromServer, { sortType, isReversed })\n              .map(good => (\n                <li data-cy=\"Good\" key={good}>{good}</li>\n              ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}